/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package be.esi.alg2.arbre.gui;

import be.esi.alg2.arbre.metier.ArbreBinaireFacade;
import be.esi.alg2.arbre.mvc.ArbreModificationListener;
import be.esi.alg2.arbre.mvc.ArbreSelectionListener;
import be.esi.alg2.arbre.mvc.Modele;
import be.esi.alg2.arbre.mvc.NoeudBinaire;
import java.util.List;
import java.util.Vector;

/**
 *
 * @author marty
 */
public class VueArbre extends javax.swing.JFrame implements ArbreSelectionListener, ArbreModificationListener {

    /**
     * Creates new form VueArbre
     */
    private Modele modele;
    private final String parcours;
    public VueArbre(String args) {
        initComponents();
        this.modele = ArbreBinaireFacade.getModele();
        parcours=args;
        typeParcours(args);
    }

    public Modele getModele() {
        return modele;
    }

    public void setModele(Modele modele) {
        this.modele = modele;
    }

    public void setjListNoeud(Vector<NoeudBinaire> aCharger) {
        this.jListNoeud.setListData(aCharger);
        this.jListNoeud.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListNoeud = new javax.swing.JList();

        getContentPane().setLayout(new java.awt.FlowLayout());

        jListNoeud.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListNoeud.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListNoeudValueChanged(evt);
            }
        });
        jListNoeud.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jListNoeudPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jListNoeud);

        getContentPane().add(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListNoeudPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jListNoeudPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jListNoeudPropertyChange

    private void jListNoeudValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListNoeudValueChanged
        this.modele.setSel((NoeudBinaire)this.jListNoeud.getSelectedValue());
    }//GEN-LAST:event_jListNoeudValueChanged

    /**
     * @param args the command line arguments Test
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueArbre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueArbre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueArbre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueArbre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueArbre("RGD").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jListNoeud;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void charge(List<NoeudBinaire> parcours) {
        //jListNoeud.removeAll();
        String str = "";
        Vector<NoeudBinaire> vec = new Vector();
        for (NoeudBinaire noeud : parcours) {
            
            vec.add(noeud);
        }
        this.jListNoeud.removeAll();
        this.setjListNoeud(vec);
    }

    @Override
    public void notifyNewSelection(NoeudBinaire nb) {
        if(nb!=null){
            jListNoeud.setSelectedValue( nb,true);
        }else{
            this.jListNoeud.clearSelection();
        }
    }

    @Override
    public void notifyModArbre() {
        this.modele=ArbreBinaireFacade.getModele();
       typeParcours(this.parcours);
       this.pack();
    }

    private void typeParcours(String args) {
        switch (args) {
            case "RGD":
                charge(modele.getRGD());
                break;
            case "GDR":
                charge(modele.getGDR());
                break;
            case "GRD":
                charge(modele.getGRD());
                break;
        }
    }
}
